#pragma config(StandardModel, "RVW SQUAREBOT")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*+++++++++++++++++++++++++++++++++++++++++++++| Notes |++++++++++++++++++++++++++++++++++++++++++++++
Moving Forward
This program instructs your robot to move forward at full power for three seconds.
There is a two second pause at the beginning of the program.

Robot Model(s): Squarebot

[I/O Port]          [Name]              [Type]                [Description]
Motor Port 2        rightMotor          VEX Motor             Right side motor
Motor Port 3        leftMotor           VEX Motor             Left side motor

*To run this sample program on Swervebot, be sure to Reverse Motor Port 3 in the Motors and Sensors
 Setup, and to make sure that Motor Port 2 is NOT Reversed.
----------------------------------------------------------------------------------------------------*/
void move(int t){
	motor[rightMotor] = 127;		  // Motor on port2 is run at full (127) power forward
	motor[leftMotor]  = 127;		  // Motor on port3 is run at full (127) power forward

	wait1Msec(t);
}

void turnL(int t){
		wait1Msec(2000);						// Robot waits for 2000 milliseconds before executing program
	// Turn Left at full power for 0.75 seconds

		motor[rightMotor] = 127;			// Motor on port2 is run at full (127) power forward
		motor[leftMotor]  = -127;		  // Motor on port3 is run at full (-127) power reverse
		wait1Msec(t);

}

void turnR(int t){
		// Turn Right at full power for 0.75 seconds

		motor[rightMotor] = -127;		  // Motor on port2 is run at full (-127) power reverse
		motor[leftMotor]  = 127;			// Motor on port3 is run at full (127) power forward
		wait1Msec(t);					      // Robot runs previous code for 750 milliseconds before moving on
}

//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
task main()
{
	wait1Msec(2000);						// Robot waits for 2000 milliseconds before executing program

	move(1200);			 // Robot moves forward until before turn

	turnL(650);		  // Makes first turn to face accordingly

	// Moves into final checkpoint
	move(2900); // Moves toward wall
	turnR(650);
	move(1500);
	turnR(650);
	move(1100); // Enters checkpoint

}												        // Program ends, and the robot stops
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
