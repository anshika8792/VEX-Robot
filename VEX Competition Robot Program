#pragma config(Motor,  port2,           leftMotor,     tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port3,           rightMotor,    tmotorVex393_HBridge, openLoop, reversed)
#pragma config(Motor,  port8,           armMotor,      tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port9,           clawMotor,   tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port4,           gearMotor,   tmotorVex393_HBridge, openLoop)

#include "JoystickDriver.c"

//center motor = port 10
//port 9 = claw motor
//port 8 = middle motor/arm motor
//

bool autonomousMove = true;

//*!!Code automatically generated by 'ROBOTC' configuration wizard							 !!*//

/*+++++++++++++++++++++++++++++++++++++++++++++| Notes |++++++++++++++++++++++++++++++++++++++++++++++
Over Under Vex Competition
This program instructs your robot to have autonomus movement for the initial beginining

Robot Model(s): Custom Squarebot

[I/O Port]					[Name]							[Type]								[Description]
Motor Port 2				rightMotor					VEX Motor							Right side motor
Motor Port 3				leftMotor						VEX Motor							Left side moto
----------------------------------------------------------------------------------------------------*/

/* ----- Rough Estimations of Distance -------|
| 23.4 inches forward													|
| 90 degree turn right												|
| 70.2 inches forward													|
| 90 degree turn left													|
| 35.1 inches forward													|
|																							|
| 9 inches/sec																|
| 1380 ms for 90d turn												|
| --> grab triball, score											|
|																							|
|---------------------------------------------| */

//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
void turnULeft(int ms1, int ms2, int ms3){
	// ms1 ~ 1300, ms2 ~ 750, ms3 ~ 1400

	// initial turn
	motor[rightMotor] = 115;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 15;				// Motor on port3 is stopped at 0 power
	wait1Msec(ms1);

	// moves forward
	motor[rightMotor] = 135;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 135;			// Motor on port3 is run at full (127) power forward
	wait1Msec(ms2);

	// remaining turn
	motor[rightMotor] = 115;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 15;				// Motor on port3 is stopped at 0 power
	wait1Msec(ms3);
}

void turnURight(int ms1, int ms2, int ms3){
	// ms1 ~ 1300, ms2 ~ 750, ms3 ~ 1400

	// intial turn
	motor[rightMotor] = 15;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 115;				// Motor on port3 is stopped at 0 power
	wait1Msec(ms1);

	// moves forward
	motor[rightMotor] = 135;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 135;			// Motor on port3 is run at full (127) power forward
	wait1Msec(ms2);

	// remaining turn
	motor[rightMotor] = 15;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 115;				// Motor on port3 is stopped at 0 power
	wait1Msec(ms3);
}

void move(int ms){
	// maitains speed for both motors
	motor[rightMotor] = 135;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 135;			// Motor on port3 is run at full (127) power forward
	wait1Msec(ms);
}

void turnLeft(int ms){
	// initial turn
	motor[rightMotor] = 115;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 15;				// Motor on port3 is stopped at 0 power
	wait1Msec(ms);
}

void turnRight(int ms){
	// initial turn
	motor[rightMotor] = 15;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 115;				// Motor on port3 is stopped at 0 power
	wait1Msec(ms);
}

void pause(int ms){
	// initial turn
	motor[rightMotor] = 0;			// Motor on port2 is run at full (127) power forward
	motor[leftMotor]	= 0;				// Motor on port3 is stopped at 0 power
	wait1Msec(ms);
}

task autonomousTask()
{
	wait1Msec(2000);						// Robot waits for 2000 milliseconds before executing program

	move(2750);
	//pause(2000);

	turnRight(1380);
	//	pause(2000);

	move(7000);
	//	pause(2000);

	turnLeft(1370);
	//	pause(2000);

	move(3900);
	pause(2000);

	autonomousMove = false;

}																// Program ends, and the robot stops
task main()
{
	// Start autonomous task
	StartTask(autonomousTask);

	while (true)
	{
		// Manual control code here
		if (!autonomousMove)
		{
			// Your manual control code goes here
			// For example, you can use joystick input to control the motors
			motor[leftMotor] = vexRT[Ch3];
			motor[rightMotor] = vexRT[Ch2];

			// Top Motor (Motor 8)
			if (vexRT[Btn8U] == 1)
			{
				// Button 8U pressed, move top motor forward
				motor[armMotor] = 63;
			}
			else if (vexRT[Btn8D] == 1)
			{
				// Button 8D pressed, move top motor backward
				motor[armMotor] = -63;
			}
			else
			{
				// No button pressed, stop top motor
				motor[armMotor] = 0;
			}

			// Bottom Motor (Motor 7)
			if (vexRT[Btn7U] == 1)
			{
				// Button 7U pressed, move bottom motor forward
				motor[gearMotor] = 63;
			}
			else if (vexRT[Btn7D] == 1)
			{
				// Button 7D pressed, move bottom motor backward
				motor[gearMotor] = -63;
			}
			else
			{
				// No button pressed, stop bottom motor
				motor[gearMotor] = 0;
			}
		}

			// Top Motor (Motor 8)
			if (vexRT[Btn7L] == 1)
			{
				// Button 8U pressed, move top motor forward
				motor[clawMotor] = 63;
			}
			else if (vexRT[Btn7R] == 1)
			{
				// Button 8D pressed, move top motor backward
				motor[clawMotor] = -63;
			}
			else
			{
				// No button pressed, stop top motor
				motor[clawMotor] = 0;
			}

		// You can add other manual control code as needed

		wait1Msec(20);	// Allow other tasks to run
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
